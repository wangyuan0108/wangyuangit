笔记

算法：处理问题的步骤

数组：有序数组
var arr=[5,8,12,15,25,68,102,132,147,290,310]
从一个数组里面判断有没有一个值

    线性查找：
    二分查找：

    中间人：
        2   6   4
        4   8   6
        2   12  7
        1   9   5
        1   8   4
        2   13  7

    * 评判代码的好坏不能根据代码的长度

                最少      最多      平均
    线性查找：   1         n         n/2
    二分查找：   1         log2n     log2n/2

            线性查找  二分查找    倍数
    10      5         2           2.5
    100     50        3.5         14
    1000    500       5           100
    10W     5W        8.5         5800
    1亿     5000W     13.5        370W

时间

为什么要学算法：
    更快、更高、更强

二分法：
    一切为二，把一个大问题，拆分成很多小问题，逐个解决

    二分法：基本上可以解决90%问题
        非常简单，不用动脑子

二分法应用：
1、找最小值
2、数组去重
3、数组排序

---------------------------------------

常见排序算法：
1、冒泡排序：每次比较相邻的两个人人，把小的放到前面
    bubbleSort  bSort
2、选择排序(插入排序)：找到整个数组里面最小的那个人，和当前的这个数换位置
    slectionSort sSort
3、归并排序：采用二分法，先把左边排好，右边排好，准备一个空数组，比较左边第一个和右边第一个，把小的添加到空数组里面，如果有一个lengt为0，把另一个直接添加到数组里面
    mergeSort   mSort
4、快速排序(快排)：先找到中间的那个人，准备2个空数组(l,r)，循环数组，如果比中间人小，放到l里面，否则放到r里面，把l c r拼接上
    quickSort   qSort

冒泡排序  3500
选择排序  711
归并排序  40
快速排序  30

---------------------------------------

这个世界上没有最好的算法

只有最合适的算法

数据结构：数据的结构
    
    * 只要数据结构定了，算法也就定了

增：银行存钱
删：银行取钱
改：百度地图
查：百度搜素

* 数据不能重复
               查    增    综合
    有序数组： 快    慢    慢
    无序数组： 慢    快    快

二叉树：

队列：先进先出，后进后出
    排队

    arr.push();
    arr.shift();

堆栈：先进后出，后进先出
    盘子

    arr.push();
    arr.pop();
    js里面数组

散列：hash
    扩建：一倍扩建

1、时间
2、空间

以空间换时间

---------------------------------------

算法：
    js      2
    php     3-4
    java    5
    算法    一辈子

算法导论













